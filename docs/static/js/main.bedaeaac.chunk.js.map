{"version":3,"sources":["actions.ts","utils.ts","components/Details/index.ts","components/Details/Details.tsx","components/Editor/index.tsx","components/Editor/Editor.tsx","components/Viewer/index.ts","components/Viewer/Viewer.tsx","components/Wallet/index.tsx","components/Wallet/Wallet.tsx","store.ts","App.tsx","reportWebVitals.ts","index.tsx","components/Details/Details.module.css","components/Viewer/Viewer.module.css","components/Editor/Editor.module.css"],"names":["api","address","a","txs","avgPrice","s","actions","wallets","retrieve","data","promises","values","Object","keys","forEach","key","push","fetch","response","json","chain_stats","funded_txo_sum","spent_txo_sum","Promise","all","walletsData","map","title","addresses","value","getTxs","myTxs","myAddresses","balance","transaction","txid","q","vout","length","scriptpubkey_address","vin","prevout","blockTime","status","block_time","sort","b","x","reverse","btcPrice","get","localStorage","setItem","price","slugify","string","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","satToBTC","satToUSD","toLocaleString","Details","slug","useContext","Context","useState","transactions","setTransactions","total","setTotal","setLocation","useLocation","useEffect","wallet","find","reduce","accum","s2u","className","styles","container","header","href","usdAmount","close","boxGreen","boxRed","moment","calendar","Editor","setData","editorData","updateEditor","window","innerWidth","expanded","expand","onClick","editor","onChange","target","spellCheck","Viewer","loading","totalBalance","walletBalance","setBalances","balances","spinner","box","Wallet","params","setWallets","setPrice","setLoading","parsedData","lines","titlePrefix","btcAddress","emptyLine","o","pool","line","match","console","warn","parse","id","initialStore","getItem","Number","React","createContext","App","Provider","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bedaeaac.chunk.js","sourcesContent":["import { IWallet, ITransaction, IHistoricalTransaction } from \"./store\";\nexport interface IParsedData {\n  [title: string]: string[];\n}\n\nconst api = {\n  blockstream: {\n    address: (a: string) => `https://blockstream.info/api/address/${a}`,\n    txs: (a: string) => `https://blockstream.info/api/address/${a}/txs`,\n  },\n  binance: {\n    avgPrice: (s: string) =>\n      `https://api.binance.com/api/v3/avgPrice?symbol=${s}`,\n  },\n};\n\nconst getWalletsData = async (data: IParsedData) => {\n  const promises = [] as Promise<void>[];\n  const values = {} as { [key: string]: number };\n  Object.keys(data).forEach((key) => {\n    data[key].forEach((address: string) => {\n      promises.push(\n        (async () => {\n          let response = await fetch(api.blockstream.address(address));\n          let json = await response.json();\n          values[address] =\n            json.chain_stats.funded_txo_sum - json.chain_stats.spent_txo_sum;\n        })()\n      );\n    });\n  });\n  await Promise.all(promises);\n  const walletsData = Object.keys(data).map((key) => {\n    const addresses = data[key].map((address: string) => {\n      return { address, value: values[address] };\n    });\n    return { title: key, addresses };\n  });\n  return walletsData as IWallet[];\n};\n\nconst getTransactionHistory = async (addresses: string[]) => {\n  const promises = [] as Promise<void>[];\n  const txs = [] as IHistoricalTransaction[];\n  const myTxs = {} as { [key: string]: boolean };\n  const myAddresses = {} as { [key: string]: boolean };\n  let balance = 0;\n\n  addresses.forEach((address) => {\n    myAddresses[address] = true;\n  });\n  addresses.forEach((address) => {\n    promises.push(\n      (async () => {\n        // returns up to 50 mempool transactions plus the first 25 confirmed transactions\n        const response = await fetch(api.blockstream.txs(address));\n        const transactions = await response.json();\n\n        transactions.forEach((transaction: ITransaction) => {\n          if (!transaction.txid) return;\n\n          let value = 0;\n          for (let q = 0; q < transaction.vout.length; q += 1) {\n            if (myAddresses[transaction.vout[q].scriptpubkey_address])\n              value += transaction.vout[q].value;\n          }\n          for (let q = 0; q < transaction.vin.length; q += 1) {\n            if (myAddresses[transaction.vin[q].prevout.scriptpubkey_address])\n              value -= transaction.vin[q].prevout.value;\n          }\n\n          if (!myTxs[transaction.txid]) {\n            myTxs[transaction.txid] = true;\n            txs.push({\n              txid: transaction.txid,\n              blockTime: transaction.status.block_time,\n              value,\n              balance: 0,\n            });\n          }\n        });\n      })()\n    );\n  });\n  await Promise.all(promises);\n\n  return txs\n    .sort((a: any, b: any) => a.blockTime - b.blockTime)\n    .map((x: any) => {\n      balance += x.value;\n      return { ...x, balance };\n    })\n    .reverse();\n};\n\nconst getBitcoinPrice = async () => {\n  let response = await fetch(api.binance.avgPrice(\"BTCUSDT\"));\n  let json = await response.json();\n  localStorage.setItem(\"btcPrice\", json.price);\n  return json.price;\n};\n\nconst actions = {\n  wallets: { retrieve: getWalletsData, getTxs: getTransactionHistory },\n  btcPrice: { get: getBitcoinPrice },\n};\n\nexport default actions;\n","// from https://gist.github.com/hagemann/382adfc57adbd5af078dc93feef01fe1\nexport const slugify = (string: string) => {\n  const a =\n    \"àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;\";\n  const b =\n    \"aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(p, (c: string) => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, \"-and-\") // Replace & with 'and'\n    .replace(/[^\\w-]+/g, \"\") // Remove all non-word characters\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\n    .replace(/^-+/, \"\") // Trim - from start of text\n    .replace(/-+$/, \"\"); // Trim - from end of text\n};\n\nexport const satToBTC = (x: number) => x / 100000000 + \" BTC\";\n\nexport const satToUSD = (btcPrice: number) => (x: number) =>\n  ((x / 100000000) * btcPrice).toLocaleString() + \" USD\";\n","import { Details } from './Details';\n\nexport default Details;\n","import moment from \"moment\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport actions from \"../../actions\";\nimport { Context } from \"../../App\";\nimport { IHistoricalTransaction as ITransaction } from \"../../store\";\nimport { satToBTC, satToUSD as s2u, slugify } from \"../../utils\";\nimport styles from \"./Details.module.css\";\n\nconst sumValues = (x: { value: number }[]) =>\n  x.reduce((accum, { value }) => accum + value, 0);\n\nconst Details = ({ slug }: { slug: string }) => {\n  const { wallets, btcPrice } = useContext(Context);\n  const [transactions, setTransactions] = useState([] as ITransaction[]);\n  const [total, setTotal] = useState(0);\n\n  const setLocation = useLocation()[1];\n\n  useEffect(() => {\n    const wallet = wallets.find(({ title }) => slugify(title) === slug);\n    if (!wallet) {\n      setLocation(\"/\");\n      return;\n    }\n\n    (async () => {\n      const txs = await actions.wallets.getTxs(\n        wallet.addresses.map((x) => x.address)\n      );\n      setTransactions(txs);\n    })();\n    setTotal(sumValues(wallet.addresses));\n  }, [slug, wallets, setLocation]);\n\n  const satToUSD = s2u(btcPrice);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <Link href=\"/\">\n          <h1>wallet.md</h1>\n        </Link>\n        <h2>Wallet balance</h2>\n        <span>{satToBTC(total)}</span>\n        <small className={styles.usdAmount}>{satToUSD(total)}</small>\n        <Link href=\"/\" className={styles.close}>+</Link>\n      </div>\n      <div className={styles.transactions}>\n        <h2>Activity</h2>\n        <ul>\n          {transactions.map(({ blockTime, txid, value, balance }) => (\n            <li key={txid}>\n              <div>\n                <span className={value > 0 ? styles.boxGreen : styles.boxRed}>\n                  {value > 0 ? \"received\" : \"sent\"}\n                </span>\n                <br />\n                <small title={moment(blockTime * 1000).calendar()}>\n                  {moment(blockTime * 1000).calendar()}\n                </small>\n              </div>\n              <div>{satToBTC(value)}</div>\n              <div>{satToBTC(balance)}</div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport { Details };\n","import { Editor} from './Editor';\n\nexport default Editor;\n","import { useContext, useState } from \"react\";\nimport { Context } from \"../../App\";\nimport styles from \"./Editor.module.css\";\n\ninterface IEvent {\n  target: {\n    value: string;\n  };\n}\n\nconst mobileWidth = 750;\n\nconst Editor = () => {\n  const { data, setData } = useContext(Context);\n  const [editorData, updateEditor] = useState(data);\n  const [expanded, expand] = useState(window.innerWidth > mobileWidth);\n\n  const onChange = ({ target: { value } }: IEvent) => {\n    updateEditor(value);\n  };\n\n  const saveChanges = () => {\n    localStorage.setItem(\"yamlFile\", editorData);\n    setData(editorData);\n    expand(false);\n  };\n\n  const expandEditor = () => expand(true)\n\n  if (!expanded && window.innerWidth < mobileWidth)\n    return (\n      <div className={styles.container}>\n        <button onClick={expandEditor} className={styles[\"expand-btn\"]}>\n          Edit\n        </button>\n      </div>\n    )\n\n  return (\n    <div className={styles.container}>\n      <textarea\n        className={styles.editor}\n        value={editorData}\n        onChange={onChange}\n        spellCheck=\"false\"\n      />\n      <button onClick={saveChanges} className={styles[\"save-btn\"]}>\n        Save\n      </button>\n    </div>\n  );\n};\n\nexport { Editor };\n","import { Viewer } from './Viewer';\n\nexport default Viewer;\n","import { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { Context } from \"../../App\";\nimport { slugify, satToBTC, satToUSD as s2u } from \"../../utils\";\nimport styles from \"./Viewer.module.css\";\n\ninterface IBalance {\n  [key: string]: number;\n}\n\nconst Viewer = ({ loading }: { loading: boolean }) => {\n  const { wallets, btcPrice } = useContext(Context);\n  const [totalBalance, setTotal] = useState(0);\n  const [walletBalance, setBalances] = useState({} as IBalance);\n\n  useEffect(() => {\n    let total = 0;\n    const balances = {} as IBalance;\n\n    wallets.forEach(({ title, addresses }) => {\n      const value = addresses.reduce((accum, { value }) => accum + value, 0);\n      balances[title] = value;\n      total += value;\n    });\n    setTotal(total);\n    setBalances(balances);\n  }, [wallets]);\n\n  const satToUSD = s2u(btcPrice);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <h1>wallet.md</h1>\n        <h2>Total balance</h2>\n        <span>{satToUSD(totalBalance)}</span>\n        {loading && <i className={styles.spinner} />}\n      </div>\n      <div className={styles.wallets}>\n        <h2>Wallets</h2>\n        <div className={styles[\"box-container\"]}>\n          {wallets.map(({ title }) => (\n            <Link key={title} href={`/${slugify(title)}`}>\n              <div className={styles.box}>\n                <h3>{title}</h3>\n                <span>{satToBTC(walletBalance[title])}</span>\n                <small>≈ {satToUSD(walletBalance[title])}</small>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Viewer };\n","import { Wallet } from './Wallet';\n\nexport default Wallet;\n","import { useContext, useEffect, useState } from \"react\";\nimport actions, { IParsedData } from \"../../actions\";\nimport { Context } from \"../../App\";\nimport Details from \"../Details\";\nimport Editor from \"../Editor\";\nimport Viewer from \"../Viewer\";\n\nconst parse = (data: string) => {\n  const lines = data.split(\"\\n\");\n  const titlePrefix = /^#\\s+/;\n  const btcAddress = /^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$/;\n  const emptyLine = /^\\s*$/;\n  const o = {} as IParsedData;\n  let pool = [];\n\n  lines.forEach((line: string) => {\n    if (line.match(titlePrefix)) {\n      pool = [] as string[];\n      o[line.replace(titlePrefix, \"\")] = pool;\n    } else if (line.match(btcAddress)) pool.push(line);\n    else if (!line.match(emptyLine)) console.warn(`malformed line: ${line}`);\n  });\n  return o;\n};\n\nconst Wallet = ({ params: { slug } }: { params: { slug?: string } }) => {\n  const { data, setWallets, setPrice } = useContext(Context);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (slug) return;\n    const parsedData = parse(data);\n    setLoading(true);\n    (async () => {\n      const walletsData = await actions.wallets.retrieve(parsedData);\n      const price = await actions.btcPrice.get();\n      setPrice(price);\n      setWallets(walletsData);\n      setLoading(false);\n    })();\n  }, [data, slug, setWallets, setPrice]);\n\n  return (\n    <div id=\"Wallet\">\n      {slug ? <Details slug={slug} /> : <Viewer loading={loading} />}\n      <Editor />\n    </div>\n  );\n};\n\nexport { Wallet };\n","import { Dispatch, SetStateAction } from \"react\";\n\ninterface IAddress {\n  address: string;\n  value: number;\n}\n\nexport interface IWallet {\n  title: string;\n  addresses: IAddress[];\n}\n\nconst example = `# Test account:\n1AJ3AzFCusdG7dyCX2H1fsCVfmA5bPs1fe\n1MQN9MFhg7rLFrw9anbEwTBY6PatVydzDi\n\n# Account 2:\n13HwKWsEpcQy9PAbcpzDqARfm2wEG7Lnfs`;\n\nexport interface ITransaction {\n  status: {\n    block_time: number;\n  };\n  vin: {\n    prevout: {\n      value: number;\n      scriptpubkey_address: string;\n    };\n  }[];\n  vout: {\n    scriptpubkey_address: string;\n    value: number;\n  }[];\n  txid: string;\n}\n\nexport interface IHistoricalTransaction {\n  txid: string;\n  value: number;\n  balance: number;\n  blockTime: number;\n}\n\nexport const initialStore = {\n  wallets: [] as IWallet[],\n  setWallets: (() => {}) as Dispatch<SetStateAction<IWallet[]>>,\n  data: localStorage.getItem(\"yamlFile\") || example,\n  setData: (() => {}) as Dispatch<SetStateAction<string>>,\n  btcPrice: localStorage.getItem(\"btcPrice\")\n    ? Number(localStorage.getItem(\"btcPrice\"))\n    : 0,\n  setPrice: (() => {}) as Dispatch<SetStateAction<number>>,\n};\n","import React, { useState } from \"react\";\nimport { Route } from \"wouter\";\nimport \"./App.css\";\nimport Wallet from \"./components/Wallet\";\nimport { initialStore } from \"./store\";\n\nexport const Context = React.createContext(initialStore);\n\nconst App = () => {\n  const [wallets, setWallets] = useState(initialStore.wallets);\n  const [data, setData] = useState(initialStore.data);\n  const [btcPrice, setPrice] = useState(initialStore.btcPrice);\n\n  return (\n    <Context.Provider\n      value={{ wallets, setWallets, data, setData, btcPrice, setPrice }}\n    >\n      <Route path=\"/\" component={Wallet} />\n      <Route path=\"/:slug\" component={Wallet} />\n    </Context.Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Details_container__bW1nG\",\"close\":\"Details_close__g0cWG\",\"header\":\"Details_header__zk2Lg\",\"usdAmount\":\"Details_usdAmount__1OSyf\",\"transactions\":\"Details_transactions__3F0OY\",\"boxGreen\":\"Details_boxGreen__3YpuB\",\"boxRed\":\"Details_boxRed__1DmDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Viewer_container__3i4A8\",\"header\":\"Viewer_header__34LO6\",\"wallets\":\"Viewer_wallets__1YNdL\",\"box-container\":\"Viewer_box-container__2zl5a\",\"box\":\"Viewer_box__3pcwy\",\"edit-btn\":\"Viewer_edit-btn__252hw\",\"spinner\":\"Viewer_spinner__1sJyZ\",\"spin\":\"Viewer_spin__24yXW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Editor_container__36r4Q\",\"editor\":\"Editor_editor__2aEyo\",\"save-btn\":\"Editor_save-btn__3xfZQ\",\"expand-btn\":\"Editor_expand-btn__3d1wt\"};"],"sourceRoot":""}